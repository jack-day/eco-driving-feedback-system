name: Web App CI

env:
  NODE_ENV: testing
  PGHOST: localhost
  PGPORT: 5432
  PGUSER: postgres
  PGPASSWORD: postgres

on:
  workflow_dispatch:
  pull_request:
    branches: [ main, dev ]

jobs:
  lint:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up Node v16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'web_app/package-lock.json'
      - name: Install dependencies
        run: |
          cd web_app
          npm install
          cp config_default.js config.js
      - name: Lint with ESLint and Stylelint
        run: cd web_app && npm run lint
  tests:
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ env.PGUSER }}
          POSTGRES_PASSWORD: ${{ env.PGPASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Node v16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'web_app/package-lock.json'
      - name: Install dependencies and run setup
        run: |
          cd web_app
          npm install
          npm run setup:tests
          cp config_default.js config.js
      - name: Run tests with Jest
        run: |
          cd web_app
          npm run test
          rm -r doc/coverage/*
          cp -rT coverage/lcov-report doc/coverage
          find ./doc/coverage -type f -exec sed -i '/Code coverage generated by/{n;n;d}' {} +
        # ^ Removes timestamp from generated html files
      - name: Commit coverage output
        uses: EndBug/add-and-commit@v7
        with:
          message: "Web App CI - Generate coverage report"
          author_name: "Web App CI Action"
          add: "./web_app/doc/coverage/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docs:
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ env.PGUSER }}
          POSTGRES_PASSWORD: ${{ env.PGPASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Node v16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'web_app/package-lock.json'
      - name: Install dependencies
        run: |
          cd web_app
          npm install
          cp config_default.js config.js
      - name: Generate documentation
        run: |
          cd web_app
          npm run docs
      - name: Commit coverage output
        uses: EndBug/add-and-commit@v7
        with:
          message: "Web App CI - Generate Docs"
          author_name: "Web App CI Action"
          add: "./web_app/doc/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}